name: Train ML Model

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  test_code_analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Test with pytest
        run: |
          pytest

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=technoavengers_ci_cd_dockers
            -Dsonar.organization=technoavengers
            -Dsonar.sources=.
            -Dsonar.branch.name=main
            -Dsonar.python.coverage.reportPaths=coverage.xml

  train_model:
    needs: test_code_analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Train the model
        run: |
          python training/training.py
          mkdir -p artifacts
          mv /tmp/random_forest_model.pkl ./artifacts/random_forest_model.pkl
          mv /tmp/scaler.pkl ./artifacts/scaler.pkl

      - name: Save the trained model as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: ./artifacts/

  create_serving_layer:
      needs: train_model
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Download trained model artifact
          uses: actions/download-artifact@v4
          with:
            name: trained-model
            path: ./artifacts/

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

        - name: Log in to Docker Hub
          uses: docker/login-action@v2
          with:
              username: ${{ secrets.DOCKER_HUB_USERNAME }}
              password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Build Docker Image
          run: |
              docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/model_serving:latest .

        - name: Push Docker Image
          run: |
              docker push ${{ secrets.DOCKER_HUB_USERNAME }}/model_serving:latest

  deploy_serving_layer:
      needs: create_serving_layer
      runs-on: ubuntu-latest

      steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials cluster-1 --zone us-central1-a --project=upgradlabs-1746955322752

      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          export USE_GKE_GCLOUD_AUTH_PLUGIN=True
      
      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f k8s/deployment.yaml

      - name: Verify Deployment
        run: |
          kubectl get pods
          kubectl get svc model-serving-service
